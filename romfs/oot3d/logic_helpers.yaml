Hookshot: Progressive_Hookshot
Longshot: count(Progressive_Hookshot, 2)
Goron_Bracelet: Progressive_Strength_Upgrade
Silver_Gauntlets: count(Progressive_Strength_Upgrade, 2)
Golden_Gauntlets: count(Progressive_Strength_Upgrade, 3)
Scarecrow: Hookshot and can_play(Scarecrow_Song)
Distant_Scarecrow: Longshot and can_play(Scarecrow_Song)
Silver_Scale: Progressive_Scale
Gold_Scale: count(Progressive_Scale, 2)
Ocarina: Progressive_Ocarina
Ocarina_of_Time: count(Progressive_Ocarina, 2)
Slingshot: Progressive_Slingshot
Bomb_Bag: Progressive_Bomb_Bag
Bow: Progressive_Bow
Adults_Wallet: Progressive_Wallet
Giants_Wallet: count(Progressive_Wallet, 2)
Magic_Meter: Progressive_Magic_Meter

Goron_Tunic: Goron_Tunic or Buy_Goron_Tunic
Zora_Tunic: Zora_Tunic or Buy_Zora_Tunic

is_child: child_day or child_night
is_adult: adult_day or adult_night
at_day: child_day or adult_day
at_night: child_night or adult_night

# Refill aliases. If we start considering Bow etc refills we can enable these aliases
# without editing all logic files.
# Bow: 'Bow',
# Slingshot: 'Slingshot',
Bombs: Progressive_Bomb_Bag
Deku_Shield: Buy_Deku_Shield
Hylian_Shield: Buy_Hylian_Shield
Nuts: Buy_Deku_Nut_5 or Buy_Deku_Nut_10 or Deku_Nut_Drop
Sticks: Buy_Deku_Stick_1 or Deku_Stick_Drop
Bugs: Bugs or Buy_Bottle_Bug
Blue_Fire: Blue_Fire or Buy_Blue_Fire
Fish: Fish or Buy_Fish
Fairy: Fairy or Buy_Fairys_Spirit

can_use(Kokiri_Sword): is_child and Kokiri_Sword
can_use(Master_Sword): is_adult and Master_Sword
can_use(Biggorons_Sword): is_adult and Biggorons_Sword
can_use(Sticks): is_child and Sticks
can_use(Slingshot): is_child and Progressive_Slingshot
can_use(Boomerang): is_child and Boomerang
can_use(Deku_Shield): is_child and Deku_Shield
can_use(Dins_Fire): Magic_Meter and Dins_Fire
can_use(Farores_Wind): Magic_Meter and Farores_Wind
can_use(Nayrus_Love): Magic_Meter and Nayrus_Love
can_use(Lens_of_Truth): Magic_Meter and Lens_of_Truth
can_use(Bow): is_adult and Bow
can_use(Megaton_Hammer): is_adult and Megaton_Hammer
can_use(Iron_Boots): is_adult and Iron_Boots
can_use(Hover_Boots): is_adult and Hover_Boots
can_use(Hookshot): is_adult and Hookshot
can_use(Longshot): is_adult and Longshot
can_use(Silver_Gauntlets): is_adult and Silver_Gauntlets
can_use(Golden_Gauntlets): is_adult and Golden_Gauntlets
can_use(Goron_Tunic): is_adult and Goron_Tunic
can_use(Zora_Tunic): is_adult and Zora_Tunic
can_use(Scarecrow): is_adult and Scarecrow
can_use(Distant_Scarecrow): is_adult and Distant_Scarecrow
can_use(Mirror_Shield): is_adult and Mirror_Shield
can_use(Fire_Arrows): is_adult and Fire_Arrows and Bow and Magic_Meter
can_use(Ice_Arrows): is_adult and Ice_Arrows and Bow and Magic_Meter
can_use(Light_Arrows): is_adult and Light_Arrows and Bow and Magic_Meter

hookshot_or_boomerang: can_use(Hookshot) or can_use(Boomerang)
can_refill_bombchus: Buy_Bombchu_5 or Buy_Bombchu_10 or Buy_Bombchu_20 or Bombchu_Drop
found_bombchus: "(bombchus_in_logic and (Progressive_Bombchus or Bombchus_5 or Bombchus_10 or Bombchus_20)) or (not bombchus_in_logic and Bomb_Bag)"
has_bombchus: "(bombchus_in_logic and found_bombchus) or (not bombchus_in_logic and can_refill_bombchus)"
has_explosives: Bombs or (bombchus_in_logic and has_bombchus)
has_bottle: Empty_Bottle or Bottle_with_Milk or Bottle_with_Red_Potion or Bottle_with_Green_Potion or Bottle_with_Blue_Potion or
            Bottle_with_Fairy or Bottle_with_Fish or Bottle_with_Blue_Fire or Bottle_with_Bugs or Bottle_with_Poe

is_glitched: logic_rules != glitchless
has_shield: (is_adult and Hylian_Shield) or (is_child and Deku_Shield)
can_shield: (is_adult and (Hylian_Shield or Mirror_Shield)) or (is_child and Deku_Shield)
can_slash_sword: can_use(Kokiri_Sword) or can_use(Master_Sword) or can_use(Biggorons_Sword)
can_mega: has_explosives and can_shield
can_isg: can_shield and (is_adult or Sticks or Kokiri_Sword)
can_hover: can_mega and can_isg
can_jumpslash: is_adult or Sticks or Kokiri_Sword
can_blast_or_smash: has_explosives or can_use(Megaton_Hammer)
can_child_attack: is_child and (Slingshot or Boomerang or Sticks or Kokiri_Sword or has_explosives or can_use(Dins_Fire))
can_child_damage: is_child and (Slingshot or Sticks or Kokiri_Sword or has_explosives or can_use(Dins_Fire))
can_cut_shrubs: is_adult or Sticks or Kokiri_Sword or Boomerang or has_explosives
can_leave_forest: open_forest != closed or is_adult or 'Deku_Tree_Clear'
can_plant_bugs: is_child and Bugs
can_ride_epona: is_adult and 'Epona' and (can_play(Eponas_Song) or (is_glitched and can_hover))
can_stun_deku: is_adult or (Slingshot or Boomerang or Sticks or Kokiri_Sword or has_explosives or can_use(Dins_Fire) or Nuts or Deku_Shield)
can_summon_gossip_fairy: Ocarina and (Zeldas_Lullaby or Eponas_Song or Song_of_Time or Suns_Song)
can_summon_gossip_fairy_without_suns: Ocarina and (Zeldas_Lullaby or Eponas_Song or Song_of_Time)

can_take_damage: damage_multiplier != 'ohko' or Fairy or can_use(Nayrus_Love)
can_plant_bean: plant_beans or (is_child and (Magic_Bean or Magic_Bean_Pack))
# can_play(song): Ocarina and song
can_open_bomb_grotto: can_blast_or_smash and (Shard_of_Agony or logic_grottos_without_agony)
can_open_storm_grotto: can_play(Song_of_Storms) and (Shard_of_Agony or logic_grottos_without_agony)
can_use_projectile: has_explosives or (is_adult and (Bow or Hookshot)) or (is_child and (Slingshot or Boomerang))
can_get_night_time_gs: can_play(Suns_Song) or not night_gs_expect_suns

has_projectile(child): has_explosives or Slingshot or Boomerang # Check these later
has_projectile(adult): has_explosives or Bow or Hookshot
has_projectile(both): has_projectile(child) and has_projectile(adult)
has_projectile(either): has_projectile(child) or has_projectile(adult)

can_use_projectile: has_explosives or can_use(Bow) or can_use(Hookshot) or can_use(Slingshot) or can_use(Boomerang)
can_use_magic_arrow: can_use(Fire_Arrows) or can_use(Ice_Arrows) or can_use(Light_Arrows)

guarantee_hint: (hints == mask and Mask_of_Truth) or (hints == agony and Shard_of_Agony) or (hints != mask and hints != agony)
has_fire_source: can_use(Dins_Fire) or can_use(Fire_Arrows)
has_fire_source_with_torch: has_fire_source or (is_child and Sticks)
can_finish_GerudoFortress:
    (gerudo_fortress == normal and count(Thieves_Hideout_Small_Key, 4) and (is_adult or Kokiri_Sword or is_glitched) and ((is_adult and (Bow or Hookshot or Hover_Boots)) or Gerudo_Token or logic_gerudo_kitchen or is_glitched)) or
    (gerudo_fortress == fast and Thieves_Hideout_Small_Key and (is_adult or Kokiri_Sword or is_glitched)) or
    (gerudo_fortress != normal and gerudo_fortress != fast)
has_all_stones: Kokiri_Emerald and Goron_Ruby and Zora_Sapphire
has_all_medallions: Forest_Medallion and Fire_Medallion and Water_Medallion and Shadow_Medallion and Spirit_Medallion and Light_Medallion
can_build_rainbow_bridge:
    (bridge == open) or
    (bridge == vanilla and Shadow_Medallion and Spirit_Medallion and Light_Arrows) or
    (bridge == stones and has_stones(bridge_stones)) or
    (bridge == medallions and has_medallions(bridge_medallions)) or
    (bridge == dungeons and has_dungeon_rewards(bridge_rewards)) or
    (bridge == tokens and count(Gold_Skulltula_Token, bridge_tokens))
can_trigger_lacs:
    (lacs_condition == vanilla and Shadow_Medallion and Spirit_Medallion) or
    (lacs_condition == stones and has_stones(lacs_stones)) or
    (lacs_condition == medallions and has_medallions(lacs_medallions)) or
    (lacs_condition == dungeons and has_dungeon_rewards(lacs_rewards)) or
    (lacs_condition == tokens and count(Gold_Skulltula_Token, lacs_tokens))
can_receive_ganon_bosskey:
    (shuffle_ganon_bosskey == stones and has_stones(ganon_bosskey_stones)) or
    (shuffle_ganon_bosskey == medallions and has_medallions(ganon_bosskey_medallions)) or
    (shuffle_ganon_bosskey == dungeons and has_dungeon_rewards(ganon_bosskey_rewards)) or
    (shuffle_ganon_bosskey == tokens and count(Gold_Skulltula_Token, ganon_bosskey_tokens)) or
    (shuffle_ganon_bosskey != stones and shuffle_ganon_bosskey != medallions
      and shuffle_ganon_bosskey != dungeons and shuffle_ganon_bosskey != tokens)
# deku_tree_shortcuts: "'deku_tree' in dungeon_shortcuts"
# dodongos_cavern_shortcuts: "'dodongos_cavern' in dungeon_shortcuts"
# jabu_shortcuts: "'jabu_jabus_belly' in dungeon_shortcuts"
# forest_temple_shortcuts: "'forest_temple' in dungeon_shortcuts"
# fire_temple_shortcuts: "'fire_temple' in dungeon_shortcuts"
# shadow_temple_shortcuts: "'shadow_temple' in dungeon_shortcuts"
# spirit_temple_shortcuts: "'spirit_temple' in dungeon_shortcuts"
